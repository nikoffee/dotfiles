# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
ZSH_THEME="powerlevel10k/powerlevel10k"

export ZSH=$HOME/.oh-my-zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source $ZSH/oh-my-zsh.sh

export DEFAULT_USER="greg"

# 10 second wait before delete everything.
setopt RM_STAR_WAIT

COMPLETION_WAITING_DOTS="true"
plugins=(battery brew bundler cabal chruby cloudapp cloudfoundry colored-man-pages colorize command-not-found common-aliases cp dash dircycle docker dotenv emoji encode64 fd firewalld fzf gcloud gem git-escape-magic git-extras git-prompt git-remote-branch git github gitignore gnu-utils go golang gpg-agent history-substring-search history iterm2 kubectl man mosh nmap node npm nvm osx pep8 pip pipenv pyenv pylint python rake-fast rake rbenv redis-cli ripgrep rsync ruby rust rvm screen ssh-agent sudo systemd tmux virtualenv vscode web-search yarn zsh_reload)

export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/opt/libxml2/lib/pkgconfig"

if [[ -f /opt/dev/dev.sh ]] && [[ $- == *i* ]]; then
  source /opt/dev/dev.sh
fi

export GREP_OPTIONS='--color=auto'
export EDITOR="nvim"
export GIT_EDITOR="nvim"

if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then source $HOME/.nix-profile/etc/profile.d/nix.sh; fi

export SHOPIFY_HOME=$HOME/src/github.com/Shopify
export DYLD_LIBRARY_PATH="/usr/local/opt/mysql-client/lib:$DYLD_LIBRARY_PATH"
export GOPATH=$HOME
export SDKROOT=`xcrun --show-sdk-path`

export PATH="/usr/local/bin:/usr/local/opt/mysql-client/bin:/usr/local/opt/mysql@5.7/bin:/usr/local/opt/mysql/bin:/usr/local/opt/python/libexec/bin:$PATH:$HOME/.cargo/bin"
export PATH="$HOME/.gem/ruby/2.5.0/bin:$PATH"
export PATH="$HOME/.gem/ruby/2.6.0/bin:$PATH"
export PATH="$HOME/.gem/ruby/2.7.0/bin:$PATH"
export PATH="$GOPATH/bin:$PATH"

alias pip="pip3"
# pip zsh completion start
function _pip_completion {
  local words cword
  read -Ac words
  read -cn cword
  reply=( $( COMP_WORDS="$words[*]" \
             COMP_CWORD=$(( cword-1 )) \
             PIP_AUTO_COMPLETE=1 $words[1] ) )
}
compctl -K _pip_completion pip3

# kubectl autocomplete
if [ $commands[kubectl] ]; then
  source <(kubectl completion zsh)
fi

#Neovim true color support
export NVIM_TUI_ENABLE_TRUE_COLOR=1

# default fd respecting gitignore for fzf by default
export FZF_DEFAULT_COMMAND='fd --type f'

 #Env Management w/ Shadowenv
eval "$(shadowenv init zsh)"

############################
#######################
###################
#
# ------ Functions  & Aliases -------
#
###################
######################
############################

brewit() {
  echo -e "\e[93mNow Updating brew..\e[0m"
  brew update
  echo -e "\e[93mNow Upgrading brew..\e[0m"
  brew upgrade
  brew update
  echo -e "\e[92mSuccess!\e[0m"
  echo -e "\e[93mNow a visit from the Doctor!\e[0m"
  brew doctor
  echo -e "\e[93mCleaning up brew\e[0m"
  brew cleanup
  echo -e "\e[92mSuccess!\e[0m"
  echo -e "\e[93mNow Upgrading oh-my-zsh!\e[0m"
  upgrade_oh_my_zsh
  echo -e "\e[92mSuccess!\e[0m"
  echo -e "\e[93mNow Upgrading pip & pip3 packages\e[0m"
  if [ hash pip3 2>/dev/null ]
  then
    pip3 list --outdated | cut -d' ' -f1 | xargs pip3 install --upgrade
  fi

  if [ hash pip2 2>/dev/null ]
  then
    pip2 list --outdated | cut -d' ' -f1 | xargs pip2 install --upgrade
  fi
  echo -e "\e[92mSuccess!\e[0m"
}

git_clean_merged_branches() {
  echo -e "\e[93mLooking to cleanup merged branches..\e[0m"
  local result=$(git branch --merged master --no-color | grep -v '^[* ] master$')
  echo -e $result
  read -q "CHOICE?Do you want to delete these branches (y/n)?"
  echo
  case "$CHOICE" in
    y|Y ) echo $result | xargs -n1 git branch -d;;
    n|N ) echo "No branches deleted. Thank you";;
    * ) echo "Wat?";;
  esac
}

alias be="bundle exec"
alias ll="ls -AahloPS"

autoload -Uz compinit
compinit

# PATHS
fpath=(/usr/local/share/zsh-completions $fpath)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'

# cloudplatform: add Shopify clusters to your local kubernetes config
export KUBECONFIG=${KUBECONFIG:+$KUBECONFIG:}$HOME/.kube/config:$HOME/.kube/config.shopify.cloudplatform
for file in $HOME/src/github.com/Shopify/cloudplatform/workflow-utils/*.bash; do source ${file}; done

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="/usr/local/sbin:$HOME/Library/Python/2.7/bin:$PATH"
